package thread01.threadUtils;import java.util.concurrent.Exchanger;import java.util.concurrent.ExecutionException;import java.util.concurrent.ExecutorService;import java.util.concurrent.Executors;/** * Created with IntelliJ IDEA. * * @Description: TODO * @Author: csx * @Date: 2018/01/12 */public class ExchangerTest {    private static final Exchanger<String> EXGR = new Exchanger<String>();    private static ExecutorService threadPool = Executors.newFixedThreadPool(2);    public static void main(String[] args) {        threadPool.execute(new Runnable() {            @Override            public void run() {                try {                    // A录入银行流水数据                    String A = "银行流水A";                    EXGR.exchange(A);                } catch (InterruptedException e) {                }            }        });        threadPool.execute(new Runnable() {            @Override            public void run() {                try {                    // B录入银行流水数据                    String B = "银行流水B";                    String A = EXGR.exchange("B");                    System.out.println("A和B数据是否一致：" + A.equals(B) + "，A录入的是：" + A + "，B录入是：" + B);                } catch (InterruptedException e) {                }            }        });        threadPool.shutdown();    }}